extends layout

block content
  #app
    #character
      .row
        h1.col
          input(v-model="character.name", placeholder="Harmonious Jade")
      .row
        label.col
          input(type="text", v-model="character.concept", placeholder="Concept")
        label.col
          | Player:
          input(v-model="character.player", placeholder="")
      .row
        label.col
          | Character type:
          select(v-model="character.characterType")
            option(v-for="(value, key) in characterTypes", :value="key") {{ key | capitalize }}
          | Anima:
          input(type="text", v-model="character.anima")


    attributes.row(:attributes = "attributes", :points = "attributePointsSpent")

    #abilities
      h2.row.col Abilities
      .row
        .sheet.col-9
          .row
            abilities.col(:abilities="abilities", :caste-abilities="characterTypes[character.characterType].castes[character.caste]", :abilities-selected="abilitiesSelected")
        .data.col-3
          .row
            p {{ abilitiesSelected }}
            p {{ abilityPointsSpent }}
            p TODO: stress test ability point calculator

    #merits
      h2.row.col Merits
      .row
        .sheet.col-9
          .row
            merits.col(:merits="merits")
        .data.col-3
          .row
            p test

    #intimacies.row








    #intimacies.row
      h2.col-xs-12.text-xs-center Intimacies
      .sheet.col-md-9
        .row
          draggable.intimacies(@start="dragging=true", @end="dragging=false")
            .intimacy(v-for="intimacy in intimacies.selected") {{ intimacy.details }} - {{intimacy.level | capitalize }} {{ intimacy.type | capitalize }}
          .new.input-group.col-xs-12
            input.form-control(type="text", placeholder="details", v-model="intimacies.new.details")
            span.input-group-addon
              template(v-for="each in ['minor', 'major', 'defining']")
                label.form-check-inline
                  input.form-check-input(type="radio", name="newIntimacyLevel", :value="each", v-model="intimacies.new.level")
                  | {{ each }}
            span.input-group-addon
              template(v-for="each in ['principle', 'tie']")
                label.form-check-inline
                  input.form-check-input(type="radio", name="newIntimacyType", :value="each", v-model="intimacies.new.type")
                  | {{ each }}
            span.input-group-btn
              button.btn.btn-primary(type="button", @click="intimacies.selected.push(intimacies.new); intimacies.new = {}") Add
